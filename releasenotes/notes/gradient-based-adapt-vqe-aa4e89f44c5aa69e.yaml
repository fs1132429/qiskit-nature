---
features:
  - |
    Added Qiskit Terra's Gradient Functionality to calculate gradients in AdaptVQE. You can choose
    the gradient method and input it while calling ``AdaptVQE``.
    for example::

      from qiskit.opflow.gradients import Gradient
      grad = Gradient(grad_method="lin_comb", epsilon=1.0)
      calc = AdaptVQE(self.qubit_converter, solver, gradient=grad)
deprecates:
  - |
    The ``delta`` argument of ``AdaptVQE`` is deprecated in favor of supplying a ``gradient`` from
    Qiskit Terra's ``qiskit.opflow.gradients`` framework. In doing so, the default behavior of
    ``AdaptVQE`` changes from using a finite difference scheme for the gradient evaluation to using
    a parameter shift method. In order to reproduce the original default behavior you must specify
    ``delta=1`` explicitly or use the following::

      from qiskit.opflow.gradients import Gradient
      grad = Gradient(grad_method="fin_diff", epsilon=1.0)
      calc = AdaptVQE(self.qubit_converter, solver, gradient=grad)
